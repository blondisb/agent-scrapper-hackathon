# ---- Build stage ---- 
FROM python:3.11-slim AS build

# Dependencias del sistema necesarias para playwright + lxml
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
        build-essential \
        libxml2-dev \
        libxslt1-dev \
        zlib1g-dev \
        ca-certificates \
        wget \
        curl \
        fonts-liberation \
        libasound2 \
        libatk1.0-0 \
        libatk-bridge2.0-0 \
        libcups2 \
        libdbus-1-3 \
        libdrm2 \
        libgbm1 \
        libglib2.0-0 \
        libnspr4 \
        libnss3 \
        libx11-6 \
        libx11-xcb1 \
        libxcb1 \
        libxcomposite1 \
        libxcursor1 \
        libxdamage1 \
        libxext6 \
        libxfixes3 \
        libxi6 \
        libxrandr2 \
        libxrender1 \
        libxss1 \
        libxtst6 \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copiamos primero requirements.txt
COPY requirements.txt .

# Instalamos dependencias globalmente
RUN python -m pip install --upgrade pip \
    && pip install --no-cache-dir -r requirements.txt

# ⚡ Instalamos Playwright browsers (chromium)
RUN python -m playwright install chromium

# ---- Final stage ----
FROM python:3.11-slim

# Dependencias mínimas en runtime (incluyendo las de chromium headless)
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
        ca-certificates \
        libxml2 \
        libxslt1.1 \
        zlib1g \
        wget \
        curl \
        fonts-liberation \
        libasound2 \
        libatk1.0-0 \
        libatk-bridge2.0-0 \
        libcups2 \
        libdbus-1-3 \
        libdrm2 \
        libgbm1 \
        libglib2.0-0 \
        libnspr4 \
        libnss3 \
        libx11-6 \
        libx11-xcb1 \
        libxcb1 \
        libxcomposite1 \
        libxcursor1 \
        libxdamage1 \
        libxext6 \
        libxfixes3 \
        libxi6 \
        libxrandr2 \
        libxrender1 \
        libxss1 \
        libxtst6 \
    && rm -rf /var/lib/apt/lists/*

# Crear user no-root
RUN useradd --no-create-home appuser
WORKDIR /app

# Copiar dependencias ya instaladas desde build
COPY --from=build /usr/local /usr/local

# ⚡ Copiar también los binarios descargados de playwright
COPY --from=build /root/.cache/ms-playwright /root/.cache/ms-playwright

# Cambiar a appuser antes de copiar el código
USER appuser
WORKDIR /app

# Copiar código de la app
COPY --chown=appuser:appuser . /app

# Puerto expuesto
EXPOSE 8080

# Comando de arranque
CMD ["python", "-m", "uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8080", "--proxy-headers"]
